{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shina\\\\Desktop\\\\React\\\\Project 1\\\\frontend\\\\src\\\\components\\\\features\\\\post\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../../actions/postAction\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../../card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchPost();\n    console.log(\"mounted\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          artwork: ele.artworkUrl100,\n          artistName: ele.artistName,\n          albumName: ele.collectionCensoredName,\n          artistViewUrl: ele.artistViewUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPost.propTypes = {\n  fetchPost: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPost\n})(Post);","map":{"version":3,"sources":["C:/Users/shina/Desktop/React/Project 1/frontend/src/components/features/post/Post.js"],"names":["React","Component","connect","fetchPost","PropTypes","Card","Post","constructor","props","componentDidMount","console","log","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","map","post","ele","artworkUrl100","artistName","collectionCensoredName","artistViewUrl","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AACA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,KAAL,CAAWL,SAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,OAAd,EAAuB;AACnB,WAAKN,KAAL,CAAWO,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKO,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AACjB,4BACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEC,GAAG,CAACC,aADjB;AAEI,UAAA,UAAU,EAAED,GAAG,CAACE,UAFpB;AAGI,UAAA,SAAS,EAAEF,GAAG,CAACG,sBAHnB;AAII,UAAA,aAAa,EAAEH,GAAG,CAACI;AAJvB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA9BwB;;AAgC7BlB,IAAI,CAACmB,SAAL,GAAiB;AACbtB,EAAAA,SAAS,EAAEC,SAAS,CAACsB,IAAV,CAAeC,UADb;AAEbZ,EAAAA,KAAK,EAAEX,SAAS,CAACwB,KAAV,CAAgBD,UAFV;AAGbb,EAAAA,OAAO,EAAEV,SAAS,CAACyB,MAAV,CAAiBF;AAHb,CAAjB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChChB,EAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,CAAYiB,KADa;AAEhClB,EAAAA,OAAO,EAAEiB,KAAK,CAAChB,KAAN,CAAYkB;AAFW,CAAZ,CAAxB;;AAKA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA;AAAF,CAAlB,CAAP,CAAwCG,IAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPost } from \"../../actions/postAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../../card/Card\";\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchPost();\r\n        console.log(\"mounted\");\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.newPost) {\r\n            this.props.posts.unshift(nextProps.newPost);\r\n        }\r\n    }\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div>\r\n                <h1>Post</h1>\r\n                {posts.map((post) => {\r\n                    return (\r\n                        <Card\r\n                            artwork={ele.artworkUrl100}\r\n                            artistName={ele.artistName}\r\n                            albumName={ele.collectionCensoredName}\r\n                            artistViewUrl={ele.artistViewUrl}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPost.propTypes = {\r\n    fetchPost: PropTypes.func.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n    newPost: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts.items,\r\n    newPost: state.posts.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPost })(Post);\r\n"]},"metadata":{},"sourceType":"module"}