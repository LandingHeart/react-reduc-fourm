{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shina\\\\Desktop\\\\React\\\\Project 1\\\\frontend\\\\src\\\\components\\\\features\\\\post\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPost } from \"../../actions/postAction\";\nimport PropTypes from \"prop-types\";\nimport CardSection from \"../../sections/CardSection\";\nimport \"./post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchPost();\n    console.log(\"mounted\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      style: {\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(CardSection, {\n          username: post.username,\n          title: post.title,\n          description: post.description,\n          comment: post.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPost.propTypes = {\n  fetchPost: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPost\n})(Post);","map":{"version":3,"sources":["C:/Users/shina/Desktop/React/Project 1/frontend/src/components/features/post/Post.js"],"names":["React","Component","connect","fetchPost","PropTypes","CardSection","Post","constructor","props","componentDidMount","console","log","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","justifyContent","textAlign","map","post","username","title","description","comment","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,KAAL,CAAWL,SAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,OAAd,EAAuB;AACnB,WAAKN,KAAL,CAAWO,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,KAAK,EAAE;AAAEU,QAAAA,cAAc,EAAE,QAAlB;AAA4BC,QAAAA,SAAS,EAAE;AAAvC,OAFX;AAAA,8BAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACjB,4BACI,QAAC,WAAD;AACI,UAAA,QAAQ,EAAEA,IAAI,CAACC,QADnB;AAEI,UAAA,KAAK,EAAED,IAAI,CAACE,KAFhB;AAGI,UAAA,WAAW,EAAEF,IAAI,CAACG,WAHtB;AAII,UAAA,OAAO,EAAEH,IAAI,CAACI;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAjCwB;;AAmC7BnB,IAAI,CAACoB,SAAL,GAAiB;AACbvB,EAAAA,SAAS,EAAEC,SAAS,CAACuB,IAAV,CAAeC,UADb;AAEbb,EAAAA,KAAK,EAAEX,SAAS,CAACyB,KAAV,CAAgBD,UAFV;AAGbd,EAAAA,OAAO,EAAEV,SAAS,CAAC0B,MAAV,CAAiBF;AAHb,CAAjB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCjB,EAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,CAAYkB,KADa;AAEhCnB,EAAAA,OAAO,EAAEkB,KAAK,CAACjB,KAAN,CAAYmB;AAFW,CAAZ,CAAxB;;AAKA,eAAehC,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA;AAAF,CAAlB,CAAP,CAAwCG,IAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPost } from \"../../actions/postAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport CardSection from \"../../sections/CardSection\";\r\nimport \"./post.css\";\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchPost();\r\n        console.log(\"mounted\");\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.newPost) {\r\n            this.props.posts.unshift(nextProps.newPost);\r\n        }\r\n    }\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div\r\n                className=\"post-content\"\r\n                style={{ justifyContent: \"center\", textAlign: \"center\" }}\r\n            >\r\n                <h1>Post</h1>\r\n                {posts.map((post) => {\r\n                    return (\r\n                        <CardSection\r\n                            username={post.username}\r\n                            title={post.title}\r\n                            description={post.description}\r\n                            comment={post.comment}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPost.propTypes = {\r\n    fetchPost: PropTypes.func.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n    newPost: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts.items,\r\n    newPost: state.posts.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPost })(Post);\r\n"]},"metadata":{},"sourceType":"module"}